package com.DtoEntityIdProblem.Service;

import org.springframework.stereotype.Service;

import com.DtoEntityIdProblem.Repository.UserRepository;
import com.DtoEntityIdProblem.dto.CreateUserRequest;
import com.DtoEntityIdProblem.dto.UserResponse;
import com.DtoEntityIdProblem.entity.User;

import jakarta.transaction.Transactional;

@Service
public class UserServiceImpl implements UserService{
	
	private final UserRepository userRepository;

	public UserServiceImpl(UserRepository userRepository) {
		this.userRepository = userRepository;
	}
	
	@Override
	@Transactional
	public UserResponse create(CreateUserRequest request) {
		//optional: basic uniqueness to check the validation flow
		if(userRepository.existsByEmail(request.email())) {
			throw new IllegalArgumentException("email already exists");
		}
		//note: id is null here; jpa will generate it on save()
		User toSave = new User(null, request.name(), request.email());
		User saved = userRepository.save(toSave);
		//saved.getId() is now non-null(generated by DB)
		return new UserResponse(saved.getId(), saved.getName(), saved.getEmail());
	}
	
	

}
